name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/rensto-site/package-lock.json

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Run ESLint
        working-directory: web/rensto-site
        run: npm run lint

      - name: Run TypeScript check
        working-directory: web/rensto-site
        run: npm run typecheck

      - name: Check formatting
        working-directory: web/rensto-site
        run: npm run format:check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/rensto-site/package-lock.json

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Run unit tests
        working-directory: web/rensto-site
        run: npm test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: web/rensto-site/coverage
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/rensto-site/package-lock.json

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Build application
        working-directory: web/rensto-site
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_NAME: Rensto
          NEXT_PUBLIC_CONTACT_EMAIL: service@rensto.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: web/rensto-site/.next

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/rensto-site/package-lock.json

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Run npm audit
        working-directory: web/rensto-site
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run security checks
        run: |
          # Check for exposed secrets
          if grep -r "sk_live\|api_key\|password" --exclude-dir=node_modules --exclude-dir=.git --exclude="*.md" .; then
            echo "Potential secrets found!"
            exit 1
          fi

  validate-ops:
    name: Validate Operations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check required ops files
        run: |
          required_files=(
            "ops/plan.md"
            "ops/spec.md"
          )

          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Missing required file: $file"
              exit 1
            fi
          done

      - name: Validate documentation
        run: |
          required_docs=(
            "README.md"
            "SECURITY.md"
            "CONTEXT.md"
            "CHANGELOG.md"
          )

          for doc in "${required_docs[@]}"; do
            if [ ! -f "$doc" ]; then
              echo "Missing documentation: $doc"
              exit 1
            fi
          done

  gates:
    name: Run Gates
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test, build, security, validate-ops]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/rensto-site/package-lock.json

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Make gates script executable
        run: chmod +x ops/gates.sh || echo "Gates script not yet created"

      - name: Run gates
        run: ./ops/gates.sh || echo "Gates script will run when created"
        continue-on-error: true

  lighthouse:
    name: Lighthouse Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: web/rensto-site
        run: npm ci

      - name: Build and start server
        working-directory: web/rensto-site
        run: |
          npm run build
          npm start &
          sleep 10
        env:
          NEXT_PUBLIC_SITE_NAME: Rensto
          NEXT_PUBLIC_CONTACT_EMAIL: service@rensto.com

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true
